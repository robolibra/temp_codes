/* var email = ['скидка', 'анонс', 'популярное', 'рассказ'];

// массив для результатов перестановок
var results = [];

// рекурсивная функция
// на вход получает текущий массив и массив с памятью предыдущих вычислений
function permute(arr, memo) {
    // переменная для хранения фрагмента массива
    var cur;

    // делаем переменную для хранения промежуточных результатов
    // в программировании это называется «мемоизация»
    var memo = memo || [];

    // какой размер входного массива — такой длины и делаем цикл, чтобы перебрать все элементы
    for (var i = 0; i < arr.length; i++) {

        // получаем новый массив cur, удаляя из входного массива один элемент, начиная с текущей позиции
        // при этом из входного массива этот элемент тоже удалится
        cur = arr.splice(i, 1);

        // если от входного массива ничего не осталось
        if (arr.length === 0) {
            // то приклеиваем текущее значение нарезки к варианту, который лежит в памяти, 
            // и добавляем получившийся результат в итоговый массив
            results.push(memo.concat(cur));
        }

        // вызываем новый виток рекурсии
        // в качестве аргументов передаём копию входящего массива и добавляем к кешу памяти то, что 
        // получилось после удаления одного символа из входящего массива
        permute(arr.slice(), memo.concat(cur));

        // возвращаем в исходный массив первый элемент из нового массива, но уже на другую позицию
        arr.splice(i, 0, cur[0]);
    }

    // возвращаем обратно массив с результатами перестановок
    return results;
}

console.log(permute(email)); */


function permut8(arr, prepend) {
    var i, version, el, result = [];
    prepend = prepend || [];
    if (arr.length === 1) return [arr];
    for (i = 0; i < arr.length; i++) {
        if (arr.length === 2) {
            result.push(prepend.concat([arr[i], arr[(i + 1) % 2]]));
        } else {
            version = arr.slice();
            el = version.splice(i, 1);
            result = result.concat(permut8(version, prepend.concat(el)));
        }
    }
    return result;
}

var test = permut8('abc'.split(''));
console.log(test);